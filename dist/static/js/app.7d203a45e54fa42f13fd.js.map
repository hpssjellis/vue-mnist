{"version":3,"sources":["webpack:///./src/data.js","webpack:///src/components/Main.vue","webpack:///./src/components/Main.vue?b698","webpack:///./src/components/Main.vue","webpack:///src/components/Hero.vue","webpack:///./src/components/Hero.vue?6565","webpack:///./src/components/Hero.vue","webpack:///src/App.vue","webpack:///./src/App.vue?cb65","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./node_modules/vega-lib/package.json","webpack:///./node_modules/vega-lite/build/package.json"],"names":["data_MnistData","MnistData","classCallCheck_default","this","shuffledTrainIndex","shuffledTestIndex","createClass_default","key","value","_ref","asyncToGenerator_default","regenerator_default","a","mark","_callee","img","canvas","ctx","imgRequest","labelsRequest","_ref2","_ref3","labelsResponse","_this","wrap","_context","prev","next","console","log","Image","document","createElement","getContext","promise_default","resolve","reject","crossOrigin","onload","width","naturalWidth","height","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_DATASET_ELEMENTS","i","datasetBytesView","Float32Array","IMAGE_SIZE","drawImage","imageData","getImageData","j","data","length","datasetImages","src","fetch","mode","all","sent","slicedToArray_default","t0","Uint8Array","arrayBuffer","t1","datasetLabels","trainIndices","dist","createShuffledIndices","testIndices","trainImages","slice","testImages","trainLabels","NUM_CLASSES","testLabels","stop","apply","arguments","batchSize","_this2","nextBatch","_this3","index","batchImagesArray","batchLabelsArray","idx","image","set","label","xs","labels","model","mnistData","add","conv2d","maxPooling2d","poolSize","strides","flatten","dense","optimizer","sgd","compile","Main","valuesCreated","mnist","testBatch","validationData","reshape","fit","batch","epochs","plotLoss","plotAccuracy","dispose","load","train","showPredictions","embed_default","accuracyValues","lossValues","_this4","testExamples","dataSync","imagesElement","prediction","pred","div","components_Main","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","message","batchNumber","attrs","id","loss","toFixed","accuracy","predictionTitle","staticRenderFns","src_components_Main","__webpack_require__","normalizeComponent","ssrContext","Hero","components_Hero","_m","src_components_Hero","Hero_normalizeComponent","App","selectortype_template_index_0_src_App","src_App","App_normalizeComponent","vue_esm","config","productionTip","el","components","template","module","exports","_args","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","type","registry","raw","name","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_spec","_where","author","url","browser","buffer","canvas-prebuilt","fs","bugs","contributors","dependencies","vega-crossfilter","vega-dataflow","vega-encode","vega-expression","vega-force","vega-geo","vega-hierarchy","vega-loader","vega-parser","vega-projection","vega-runtime","vega-scale","vega-scenegraph","vega-statistics","vega-transforms","vega-typings","vega-util","vega-view","vega-view-transforms","vega-voronoi","vega-wordcloud","description","devDependencies","eslint","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tape","tv4","uglify-js","homepage","jsnext:main","keywords","license","main","repository","scripts","__postpublish","build","postbuild","prebuild","prepublish","test","version","collaborators","unpkg","jsdelivr","types","bin","vl2png","vl2svg","vl2vg","directories","pretsc","build:only","build:examples","build:examples-only","build:examples-normalized","build:example","build:toc","build:site","build:versions","build:test-gallery","check:examples","check:schema","clean","deploy","deploy:gh","deploy:schema","prestart","start","poststart","preschema","schema","renameschema","presite","site","lint","posttest","test:nocompile","test:only","test:runtime","test:runtime:generate","test:debug","test:debug-examples","mocha:test","mocha:examples","codecov","watch:build","watch:test","watch","@types/chai","@types/d3","@types/highlight.js","@types/mkdirp","@types/mocha","@types/node","@types/webdriverio","ajv","browser-sync","browserify-shim","browserify","chai","cheerio","chromedriver","d3","exorcist","highlight.js","mkdirp","mocha","nodemon","nyc","source-map-support","svg2png-many","ts-json-schema-generator","ts-node","tsify","tslint-eslint-rules","tslint","typescript","vega-datasets","vega-embed","vega-tooltip","vega","watchify","wdio-chromedriver-service","wdio-dot-reporter","wdio-mocha-framework","wdio-static-server-service","webdriverio","yaml-front-matter","@types/json-stable-stringify","json-stable-stringify","tslib","vega-event-selector","yargs"],"mappings":"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","file":"static/js/app.7d203a45e54fa42f13fd.js","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs';\n\nconst IMAGE_SIZE = 784;\nconst NUM_CLASSES = 10;\nconst NUM_DATASET_ELEMENTS = 65000;\n\nconst NUM_TRAIN_ELEMENTS = 55000;\nconst NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\n\nconst MNIST_IMAGES_SPRITE_PATH =\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\nconst MNIST_LABELS_PATH =\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\n\n/**\n * A class that fetches the sprited MNIST dataset and returns shuffled batches.\n *\n * NOTE: This will get much easier. For now, we do data fetching and\n * manipulation manually.\n */\nexport class MnistData {\n  constructor() {\n    this.shuffledTrainIndex = 0;\n    this.shuffledTestIndex = 0;\n  }\n\n  async load() {\n    console.log('you are in the load method of class MnistData')\n    // Make a request for the MNIST sprited image.\n    const img = new Image();\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const imgRequest = new Promise((resolve, reject) => {\n      img.crossOrigin = '';\n      img.onload = () => {\n        img.width = img.naturalWidth;\n        img.height = img.naturalHeight;\n\n        const datasetBytesBuffer =\n            new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\n\n        const chunkSize = 5000;\n        canvas.width = img.width;\n        canvas.height = chunkSize;\n\n        for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\n          const datasetBytesView = new Float32Array(\n              datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\n              IMAGE_SIZE * chunkSize);\n\n          ctx.drawImage(\n              img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\n              chunkSize);\n\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          for (let j = 0; j < imageData.data.length / 4; j++) {\n            // All channels hold an equal value since the image is grayscale, so\n            // just read the red channel.\n            datasetBytesView[j] = imageData.data[j * 4] / 255;\n          }\n        }\n\n        this.datasetImages = new Float32Array(datasetBytesBuffer);\n\n        resolve();\n      };\n      console.log('you are about to load image');\n      img.src = MNIST_IMAGES_SPRITE_PATH;\n    });\n\n    const labelsRequest = fetch(MNIST_LABELS_PATH, {mode: 'arraybuffer'});\n    const [imgResponse, labelsResponse] =\n        await Promise.all([imgRequest, labelsRequest]);\n\n\n    this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\n\n    // Create shuffled indices into the train/test set for when we select a\n    // random dataset element for training / validation.\n    this.trainIndices = tf.util.createShuffledIndices(NUM_TRAIN_ELEMENTS);\n    this.testIndices = tf.util.createShuffledIndices(NUM_TEST_ELEMENTS);\n\n    // Slice the the images and labels into train and test sets.\n    this.trainImages =\n        this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.trainLabels =\n        this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n    this.testLabels =\n        this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n  }\n\n  nextTrainBatch(batchSize) {\n    return this.nextBatch(\n        batchSize, [this.trainImages, this.trainLabels], () => {\n          this.shuffledTrainIndex =\n              (this.shuffledTrainIndex + 1) % this.trainIndices.length;\n          return this.trainIndices[this.shuffledTrainIndex];\n        });\n  }\n\n  nextTestBatch(batchSize) {\n    return this.nextBatch(batchSize, [this.testImages, this.testLabels], () => {\n      this.shuffledTestIndex =\n          (this.shuffledTestIndex + 1) % this.testIndices.length;\n      return this.testIndices[this.shuffledTestIndex];\n    });\n  }\n\n  nextBatch(batchSize, data, index) {\n    const batchImagesArray = new Float32Array(batchSize * IMAGE_SIZE);\n    const batchLabelsArray = new Uint8Array(batchSize * NUM_CLASSES);\n\n    for (let i = 0; i < batchSize; i++) {\n      const idx = index();\n\n      const image =\n          data[0].slice(idx * IMAGE_SIZE, idx * IMAGE_SIZE + IMAGE_SIZE);\n      batchImagesArray.set(image, i * IMAGE_SIZE);\n\n      const label =\n          data[1].slice(idx * NUM_CLASSES, idx * NUM_CLASSES + NUM_CLASSES);\n      batchLabelsArray.set(label, i * NUM_CLASSES);\n    }\n\n    const xs = tf.tensor2d(batchImagesArray, [batchSize, IMAGE_SIZE]);\n    const labels = tf.tensor2d(batchLabelsArray, [batchSize, NUM_CLASSES]);\n    return {xs, labels};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data.js","<template>\n    <div class=\"container\">\n\n        <section class=\"section\">\n            <h1 class=\"title\">{{ message }}</h1>\n            <h2 class=\"subtitle\">\n                <p class=\"lead\">\n                    {{ `Batch: ${batchNumber}`}}\n                </p>\n            </h2>\n        </section>\n\n        <section class=\"section\">\n            <div class=\"columns\">\n                <div class=\"column\">\n                    <div class=\"canvases\">\n                        <div class=\"label\" id=\"loss-label\">\n                            <p class=\"lead\">{{ `Last loss: ${lossValues[lossValues.length - 1].loss.toFixed(2)}`}}</p>\n                        </div>\n                        <div id=\"lossCanvas\"></div>\n                    </div>\n\n                </div>\n                <div class=\"column\">\n                    <div class=\"canvases\">\n                        <div class=\"label\" id=\"accuracy-label\">\n                            <p class=\"lead\">{{ `Last accuracy: ${(accuracyValues[accuracyValues.length - 1].accuracy *\n                                100).toFixed(2)}`}}</p>\n                        </div>\n                        <div id=\"accuracyCanvas\"></div>\n                    </div>\n                </div>\n                <div class=\"column\"></div>\n                <div class=\"column\"></div>\n            </div>\n        </section>\n        <section class=\"section\">\n            <h1 class=\"title\">{{ predictionTitle }}</h1>\n            <div id=\"images\"></div>\n        </section>\n    </div>\n</template>\n\n\n<script>\n    import * as tf from '@tensorflow/tfjs'\n    import {MnistData} from '../data.js'\n    import embed from 'vega-embed'\n\n\n    const model = tf.sequential()\n    let mnistData\n\n    model.add(tf.layers.conv2d({\n        inputShape: [28, 28, 1],\n        kernelSize: 5,\n        filters: 8,\n        strides: 1,\n        activation: 'relu',\n        kernelIniliazer: 'varianceScaling'\n    }))\n\n    model.add(tf.layers.maxPooling2d({poolSize: [2, 2], strides: [2, 2]}))\n    model.add(tf.layers.conv2d({\n        kernelSize: 5,\n        filters: 16,\n        strides: 1,\n        activation: 'relu',\n        kernelIniliazer: 'varianceScaling'\n    }))\n    model.add(tf.layers.maxPooling2d({poolSize: [2, 2], strides: [2, 2]}))\n    model.add(tf.layers.flatten())\n    model.add(tf.layers.dense({\n        units: 10, kernelIniliazer: 'varianceScaling', activation: 'softmax'\n    }))\n\n    const LEARNING_RATE = 0.5\n    const optimizer = tf.train.sgd(LEARNING_RATE)\n    model.compile({\n        optimizer: optimizer,\n        loss: 'categoricalCrossentropy',\n        metrics: ['accuracy']\n\n    });\n\n    const BATCH_SIZE = 64\n    const TRAIN_BATCHES = 150\n\n    const TEST_BATCH_SIZE = 1000\n    const TEST_ITERATION_FREQUENCY = 5\n\n    let data\n    export default {\n\n\n        created() {\n            // this.message = 'Loading data ...'\n            // console.log(this.valuesCreated)\n            // this.mnist();\n        },\n\n        mounted() {\n            this.message = 'Loading data ...'\n            console.log(this.valuesCreated)\n            this.mnist();\n        },\n\n        data() {\n            return {\n                message: 'Loading data ...',\n                lossValues: [],\n                accuracyValues: [],\n                batchNumber: null,\n                predictions: [],\n                predictionTitle: ''\n\n\n            }\n        },\n\n\n        methods: {\n            async train() {\n                this.message = 'Training ...';\n\n                for (let i = 0; i < TRAIN_BATCHES; i++) {\n                    this.batchNumber = i;\n                    const batch = mnistData.nextTrainBatch(BATCH_SIZE);\n\n                    let testBatch;\n                    let validationData;\n                    // Every few batches test the accuracy of the mode.\n                    if (i % TEST_ITERATION_FREQUENCY === 0) {\n                        testBatch = mnistData.nextTestBatch(TEST_BATCH_SIZE);\n                        validationData = [\n                            testBatch.xs.reshape([TEST_BATCH_SIZE, 28, 28, 1]), testBatch.labels\n                        ];\n                    }\n\n                    // The entire dataset doesn't fit into memory so we call fit repeatedly\n                    // with batches.\n                    const history = await model.fit(\n                        batch.xs.reshape([BATCH_SIZE, 28, 28, 1]), batch.labels,\n                        {batchSize: BATCH_SIZE, validationData, epochs: 1});\n\n\n                    const loss = history.history.loss[0];\n                    const accuracy = history.history.acc[0];\n\n\n                    // Plot loss / accuracy.\n                    this.lossValues.push({'batch': i, 'loss': loss, 'set': 'train'});\n\n                    this.plotLoss()\n\n                    if (testBatch != null) {\n                        this.accuracyValues.push({'batch': i, 'accuracy': accuracy, 'set': 'train'});\n                        this.plotAccuracy()\n                    }\n\n                    batch.xs.dispose();\n                    batch.labels.dispose();\n                    if (testBatch != null) {\n                        testBatch.xs.dispose();\n                        testBatch.labels.dispose();\n                    }\n\n                    await tf.nextFrame();\n                }\n                this.message = 'Done!'\n            },\n\n            async load() {\n                mnistData = new MnistData();\n                await mnistData.load()\n            },\n\n            async mnist() {\n                await this.load()\n                await this.train()\n                this.showPredictions()\n            },\n\n            plotAccuracy() {\n                embed(\n                    `#accuracyCanvas`, {\n                        '$schema': 'https://vega.github.io/schema/vega-lite/v2.json',\n                        'data': {'values': this.accuracyValues},\n                        'mark': {'type': 'line', 'legend': null},\n                        'width': 260,\n                        'orient': 'vertical',\n                        'encoding': {\n                            'x': {'field': 'batch', 'type': 'quantitative'},\n                            'y': {'field': 'accuracy', 'type': 'quantitative'},\n                            'color': {'field': 'set', 'type': 'nominal', 'legend': null},\n                        }\n                    },\n                    {width: 360});\n\n            },\n\n\n            plotLoss() {\n\n                embed(\n                    '#lossCanvas', {\n                        '$schema': 'https://vega.github.io/schema/vega-lite/v2.json',\n                        'data': {'values': this.lossValues},\n                        'mark': {'type': 'line'},\n                        'width': 260,\n                        'orient': 'vertical',\n                        'encoding': {\n                            'x': {'field': 'batch', 'type': 'quantitative'},\n                            'y': {'field': 'loss', 'type': 'quantitative'},\n                            'color': {'field': 'set', 'type': 'nominal', 'legend': null},\n                        }\n                    },\n                    {width: 360});\n\n            },\n\n\n            async showPredictions() {\n\n                const testExamples = 100\n                const batch = mnistData.nextTestBatch(testExamples);\n\n                tf.tidy(() => {\n                    const output = model.predict(batch.xs.reshape([-1, 28, 28, 1]))\n                    const axis = 1\n                    const labels = Array.from(batch.labels.argMax(axis).dataSync())\n                    const predictions = Array.from(output.argMax(axis).dataSync())\n\n                    this.showTestResults(batch, predictions, labels)\n\n                });\n\n\n            },\n\n            showTestResults(batch, predictions, labels) {\n                this.predictionTitle = 'Predictions';\n\n                const imagesElement = document.getElementById('images');\n                console.log(imagesElement)\n                const testExamples = batch.xs.shape[0];\n                let totalCorrect = 0;\n                for (let i = 0; i < testExamples; i++) {\n                    const image = batch.xs.slice([i, 0], [1, batch.xs.shape[1]]);\n\n                    const div = document.createElement('div');\n                    div.className = 'pred-container';\n\n                    const canvas = document.createElement('canvas');\n                    canvas.setAttribute('class', 'predictionCanvas');\n                    this.draw(image.flatten(), canvas);\n\n                    const pred = document.createElement('div');\n\n                    const prediction = predictions[i];\n                    const label = labels[i];\n                    const correct = prediction === label;\n\n                    pred.className = `pred ${(correct ? 'pred-correct' : 'pred-incorrect')}`;\n                    pred.innerText = `pred: ${prediction}`;\n\n                    div.appendChild(pred);\n                    div.appendChild(canvas);\n\n                    imagesElement.appendChild(div);\n\n\n                }\n            },\n\n            draw(image, canvas) {\n                const [width, height] = [28, 28];\n                canvas.width = width;\n                canvas.height = height;\n                const ctx = canvas.getContext('2d');\n                const imageData = new ImageData(width, height);\n                const data = image.dataSync();\n                for (let i = 0; i < height * width; ++i) {\n                    const j = i * 4;\n                    imageData.data[j + 0] = data[i] * 255;\n                    imageData.data[j + 1] = data[i] * 255;\n                    imageData.data[j + 2] = data[i] * 255;\n                    imageData.data[j + 3] = 255;\n                }\n                ctx.putImageData(imageData, 0, 0);\n            }\n\n\n        }\n    }\n\n\n</script>\n\n\n<style scoped>\n\n\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Main.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('section',{staticClass:\"section\"},[_c('h1',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.message))]),_vm._v(\" \"),_c('h2',{staticClass:\"subtitle\"},[_c('p',{staticClass:\"lead\"},[_vm._v(\"\\n                \"+_vm._s((\"Batch: \" + _vm.batchNumber))+\"\\n            \")])])]),_vm._v(\" \"),_c('section',{staticClass:\"section\"},[_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"canvases\"},[_c('div',{staticClass:\"label\",attrs:{\"id\":\"loss-label\"}},[_c('p',{staticClass:\"lead\"},[_vm._v(_vm._s((\"Last loss: \" + (_vm.lossValues[_vm.lossValues.length - 1].loss.toFixed(2)))))])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"lossCanvas\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"canvases\"},[_c('div',{staticClass:\"label\",attrs:{\"id\":\"accuracy-label\"}},[_c('p',{staticClass:\"lead\"},[_vm._v(_vm._s((\"Last accuracy: \" + ((_vm.accuracyValues[_vm.accuracyValues.length - 1].accuracy *\n                            100).toFixed(2)))))])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"accuracyCanvas\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"column\"}),_vm._v(\" \"),_c('div',{staticClass:\"column\"})])]),_vm._v(\" \"),_c('section',{staticClass:\"section\"},[_c('h1',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.predictionTitle))]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"images\"}})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-200f7b58\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Main.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-200f7b58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Main.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Main.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Main.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-200f7b58\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Main.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-200f7b58\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Main.vue\n// module id = null\n// module chunks = ","<template>\n    <div>\n        <section class=\"hero is-warning\">\n            <div class=\"container\">\n            <div class=\"hero-body\">\n                <h1 class=\"title\">\n                    Hi, there\n                </h1>\n\n                <h2 class=\"subtitle\">\n                    Let's train the famous MNIST data using Tensorflow.js and Vue.js\n                </h2>\n            </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\nexport default {\n    mounted(){\n        console.log('the component was mounted')\n    }\n  \n}\n</script>\n\n\n<style>\n\n</style>\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/Hero.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',{staticClass:\"hero is-warning\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"hero-body\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"\\n                Hi, there\\n            \")]),_vm._v(\" \"),_c('h2',{staticClass:\"subtitle\"},[_vm._v(\"\\n                Let's train the famous MNIST data using Tensorflow.js and Vue.js\\n            \")])])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4db16f2f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Hero.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4db16f2f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Hero.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hero.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hero.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4db16f2f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Hero.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Hero.vue\n// module id = null\n// module chunks = ","<template>\n    <div id=\"app\">\n            <Hero/>\n        <div class=\"container\">\n            <Main></Main>\n        </div>\n    </div>\n</template>\n\n<script>\n    require('../node_modules/bulma/css/bulma.css');\n    import Main from './components/Main'\n    import Hero from './components/Hero'\n\n    export default {\n        name: 'App',\n        components: {\n            Main,\n            Hero\n        }\n    }\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        color: #2c3e50;\n    }\n\n    .vega-actions {\n        display: none;\n    }\n\n\n    .canvases {\n        display: inline-block;\n        width: 460px;\n    }\n\n    canvas {\n        width: 200px;\n    }\n\n    .predictionCanvas{\n        width: 100px;\n    }\n    .pred {\n        font-size: 20px;\n        line-height: 25px;\n        width: 100px;\n    }\n    .pred-correct {\n        background-color: #00cf00;\n    }\n    .pred-incorrect {\n        background-color: red;\n    }\n    .pred-container {\n        display: inline-block;\n        width: 100px;\n        margin: 10px;\n    }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Hero'),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('Main')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6bdec80d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6bdec80d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6bdec80d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"_args\":[[\"vega-lib@3.2.1\",\"/Users/paryal/sites/vue-mnist\"]],\"_from\":\"vega-lib@3.2.1\",\"_id\":\"vega-lib@3.2.1\",\"_inBundle\":false,\"_integrity\":\"sha512-ufcPBsYyiDkyvw20lKZi/pAYFRVJNmsnpX+JyO+lvLUg2XjtChC7xNHI7htHI2AXk525F4zG/yHB2T9U97JdBQ==\",\"_location\":\"/vega-lib\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"vega-lib@3.2.1\",\"name\":\"vega-lib\",\"escapedName\":\"vega-lib\",\"rawSpec\":\"3.2.1\",\"saveSpec\":null,\"fetchSpec\":\"3.2.1\"},\"_requiredBy\":[\"/vega-embed\"],\"_resolved\":\"https://registry.npmjs.org/vega-lib/-/vega-lib-3.2.1.tgz\",\"_spec\":\"3.2.1\",\"_where\":\"/Users/paryal/sites/vue-mnist\",\"author\":{\"name\":\"UW Interactive Data Lab\",\"url\":\"http://idl.cs.washington.edu\"},\"browser\":{\"buffer\":false,\"canvas\":false,\"canvas-prebuilt\":false,\"fs\":false},\"bugs\":{\"url\":\"https://github.com/vega/vega-lib/issues\"},\"contributors\":[{\"name\":\"Jeffrey Heer\",\"url\":\"http://idl.cs.washington.edu\"},{\"name\":\"Arvind Satyanarayan\",\"url\":\"http://arvindsatya.com\"},{\"name\":\"Ryan Russell\",\"url\":\"https://github.com/RussellSprouts\"},{\"name\":\"Emily Gu\",\"url\":\"https://github.com/emilygu\"},{\"name\":\"Dominik Moritz\",\"url\":\"https://www.domoritz.de\"},{\"name\":\"Yuri Astrakhan\",\"url\":\"https://github.com/nyurik\"}],\"dependencies\":{\"vega-crossfilter\":\"2\",\"vega-dataflow\":\"3\",\"vega-encode\":\"2\",\"vega-expression\":\"^2.3\",\"vega-force\":\"2\",\"vega-geo\":\"^2.2\",\"vega-hierarchy\":\"^2.1\",\"vega-loader\":\"2\",\"vega-parser\":\"^2.5\",\"vega-projection\":\"1\",\"vega-runtime\":\"2\",\"vega-scale\":\"^2.1\",\"vega-scenegraph\":\"^2.3\",\"vega-statistics\":\"^1.2\",\"vega-transforms\":\"^1.2\",\"vega-typings\":\"*\",\"vega-util\":\"^1.7\",\"vega-view\":\"^2.2\",\"vega-view-transforms\":\"^1.2\",\"vega-voronoi\":\"2\",\"vega-wordcloud\":\"^2.1\"},\"description\":\"Include Vega in projeccts using minimal dependencies.\",\"devDependencies\":{\"eslint\":\"4\",\"rollup\":\"0.43\",\"rollup-plugin-json\":\"2\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"tv4\":\"1\",\"uglify-js\":\"3\"},\"homepage\":\"https://github.com/vega/vega-lib#readme\",\"jsnext:main\":\"index\",\"keywords\":[\"vega\",\"visualization\",\"interaction\",\"dataflow\",\"library\",\"data\",\"d3\"],\"license\":\"BSD-3-Clause\",\"main\":\"build/vega.js\",\"module\":\"index\",\"name\":\"vega-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/vega/vega-lib.git\"},\"scripts\":{\"__postpublish\":\"git push && git push --tags\",\"build\":\"npm run rollup && bin/rollup -e\",\"postbuild\":\"uglifyjs build/vega.js -c -m -o build/vega.min.js && uglifyjs build/vega-core.js -c -m -o build/vega-core.min.js\",\"prebuild\":\"rm -rf build && mkdir build\",\"prepublish\":\"npm run test && npm run build\",\"rollup\":\"bin/rollup && bin/schema > build/vega-schema.json\",\"test\":\"eslint index.js\"},\"version\":\"3.2.1\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vega-lib/package.json\n// module id = SeQP\n// module chunks = 1","module.exports = {\"name\":\"vega-lite\",\"author\":\"Jeffrey Heer, Dominik Moritz, Kanit \\\"Ham\\\" Wongsuphasawat\",\"version\":\"2.3.1\",\"collaborators\":[\"Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)\",\"Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)\",\"Jeffrey Heer <jheer@uw.edu> (http://jheer.org)\"],\"homepage\":\"https://vega.github.io/vega-lite/\",\"description\":\"Vega-Lite is a concise high-level language for interactive visualization.\",\"main\":\"build/src/index.js\",\"unpkg\":\"build/vega-lite.min.js\",\"jsdelivr\":\"build/vega-lite.min.js\",\"types\":\"typings/vega-lite.d.ts\",\"bin\":{\"vl2png\":\"./bin/vl2png\",\"vl2svg\":\"./bin/vl2svg\",\"vl2vg\":\"./bin/vl2vg\"},\"directories\":{\"test\":\"test\"},\"scripts\":{\"pretsc\":\"mkdir -p build && rm -rf build/*/** && cp package.json build/\",\"prebuild\":\"mkdir -p build/site build/test-gallery\",\"build\":\"npm run build:only\",\"build:only\":\"tsc && cp package.json build && browserify src/index.ts -p tsify -d -s vl | exorcist build/vega-lite.js.map > build/vega-lite.js\",\"postbuild\":\"node node_modules/uglify-js/bin/uglifyjs build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && npm run schema\",\"build:examples\":\"npm run data && npm run build:only && npm run build:examples-only\",\"build:examples-only\":\"npm run build:example && npm run build:examples-normalized\",\"build:examples-normalized\":\"rm -f examples/specs/normalized/*.vl.json && scripts/build-normalized-examples\",\"build:example\":\"TZ=America/Los_Angeles scripts/build-examples.sh\",\"build:toc\":\"bundle exec jekyll build -q && scripts/generate-toc\",\"build:site\":\"browserify site/static/main.ts -p [tsify -p site] -d | exorcist build/site/main.js.map > build/site/main.js\",\"build:versions\":\"scripts/update-version.sh\",\"build:test-gallery\":\"browserify test-gallery/main.ts -p [tsify -p test-gallery] -d > build/test-gallery/main.js\",\"check:examples\":\"scripts/check-examples.sh\",\"check:schema\":\"scripts/check-schema.sh\",\"clean\":\"rm -rf build && rm -f vega-lite.* & find -E src test site examples -regex '.*\\\\.(js|js.map|d.ts)' -delete && rm -f examples/compiled/*.png && find site/examples ! -name 'index.md' -type f -exec rm -f {} +\",\"data\":\"rsync -r node_modules/vega-datasets/data/* data\",\"deploy\":\"scripts/deploy.sh\",\"deploy:gh\":\"scripts/deploy-gh.sh\",\"deploy:schema\":\"scripts/deploy-schema.sh\",\"prestart\":\"npm run data && npm run build && scripts/index-examples\",\"start\":\"nodemon -x 'npm run build:test-gallery' & browser-sync start --server --files 'build/test-gallery/main.js' --index 'test-gallery/index.html'\",\"poststart\":\"rm examples/all-examples.json\",\"preschema\":\"npm run prebuild\",\"schema\":\"ts-json-schema-generator --path tsconfig.json --type TopLevelSpec > build/vega-lite-schema.json && npm run renameschema && cp build/vega-lite-schema.json _data/\",\"renameschema\":\"scripts/rename-schema.sh\",\"presite\":\"npm run prebuild && npm run data && npm run build:site && npm run build:toc && npm run build:versions && scripts/create-example-pages\",\"site\":\"bundle exec jekyll serve --incremental\",\"lint\":\"tslint -p .\",\"test\":\"npm run build:only && npm run test:only && npm run test:runtime && npm run lint\",\"posttest\":\"npm run schema && npm run data && npm run mocha:examples\",\"test:nocompile\":\"npm run test:only && npm run test:runtime && npm run lint && npm run mocha:examples\",\"test:only\":\"nyc --reporter=html --reporter=text-summary npm run mocha:test\",\"test:runtime\":\"TZ=America/Los_Angeles wdio wdio.conf.js\",\"test:runtime:generate\":\"rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true npm run test:runtime\",\"test:debug\":\"tsc && mocha --recursive --debug-brk --inspect build/test\",\"test:debug-examples\":\"tsc && npm run schema && mocha --recursive --debug-brk --inspect build/examples\",\"mocha:test\":\"mocha --require source-map-support/register --reporter dot --recursive build/test\",\"mocha:examples\":\"mocha --require source-map-support/register --reporter dot --recursive build/examples\",\"codecov\":\"nyc report --reporter=json && codecov -f coverage/*.json\",\"watch:build\":\"watchify src/index.ts -p tsify -v -d -s vl -o 'exorcist build/vega-lite.js.map > build/vega-lite.js'\",\"watch:test\":\"nodemon -x 'npm test'\",\"watch\":\"nodemon -x 'npm run build && npm run test:nocompile' # already ran schema in build\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/vega/vega-lite.git\"},\"license\":\"BSD-3-Clause\",\"bugs\":{\"url\":\"https://github.com/vega/vega-lite/issues\"},\"devDependencies\":{\"@types/chai\":\"^4.1.2\",\"@types/d3\":\"^4.13.0\",\"@types/highlight.js\":\"^9.12.2\",\"@types/mkdirp\":\"^0.5.2\",\"@types/mocha\":\"^2.2.48\",\"@types/node\":\"^9.4.7\",\"@types/webdriverio\":\"^4.10.0\",\"ajv\":\"^6.2.1\",\"browser-sync\":\"^2.23.6\",\"browserify-shim\":\"^3.8.14\",\"browserify\":\"^16.1.1\",\"chai\":\"^4.1.2\",\"cheerio\":\"^1.0.0-rc.2\",\"chromedriver\":\"^2.36.0\",\"codecov\":\"^3.0.0\",\"d3\":\"^4.13.0\",\"exorcist\":\"^1.0.1\",\"highlight.js\":\"^9.12.0\",\"mkdirp\":\"^0.5.1\",\"mocha\":\"^5.0.4\",\"nodemon\":\"^1.17.1\",\"nyc\":\"^11.4.1\",\"source-map-support\":\"^0.5.3\",\"svg2png-many\":\"^0.0.7\",\"ts-json-schema-generator\":\"^0.21.0\",\"ts-node\":\"^5.0.1\",\"tsify\":\"^3.0.4\",\"tslint-eslint-rules\":\"^5.1.0\",\"tslint\":\"5.9.1\",\"typescript\":\"^2.7.2\",\"uglify-js\":\"^3.3.14\",\"vega-datasets\":\"^1.18.0\",\"vega-embed\":\"^3.1.1\",\"vega-tooltip\":\"^0.6.1\",\"vega\":\"^3.2.1\",\"watchify\":\"^3.11.0\",\"wdio-chromedriver-service\":\"^0.1.2\",\"wdio-dot-reporter\":\"0.0.9\",\"wdio-mocha-framework\":\"^0.5.13\",\"wdio-static-server-service\":\"^1.0.1\",\"webdriverio\":\"^4.12.0\",\"yaml-front-matter\":\"^4.0.0\"},\"dependencies\":{\"@types/json-stable-stringify\":\"^1.0.32\",\"vega-typings\":\"^0.2.11\",\"json-stable-stringify\":\"^1.0.1\",\"tslib\":\"^1.9.0\",\"vega-event-selector\":\"^2.0.0\",\"vega-util\":\"^1.7.0\",\"yargs\":\"^11.0.0\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vega-lite/build/package.json\n// module id = Wriu\n// module chunks = 1"],"sourceRoot":""}